<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

   <!--spring中的依赖注入
        依赖注入：
            Dependency Injection
         IOC的作用：
            降低程序间的耦合（依赖关系）
         依赖关系的管理：
            以后都交给Spring维护
            在当前类需要用到其他类的对象，由spring为我们提供，我们只需要在配置文件中说明
            依赖关系的维护：
                就称之为依赖注入
              依赖注入：
                能注入的数据：有三种
                基本类型和string
                其他bean类型（在配置文件中配置过的bean）
                复杂类型/集合类型
              注入的方式：有三种
                第一种：使用构造方法提供
                第二种：使用set方法提供
                第三种：使用注解方式提供

   -->

    <!--构造函数注入
        使用标签：constructor-arg
        标签出现位置：bean标签内部
        标签中的属性：
            type：用于指定要注入的数据的数据类型，该数据类型也是构造函数中某个或某些参数类型
            index：用于指定要注入的数据给构造函数中指定索引位置的参数赋值，索引位置是从0开始
            name：用于指定给构造函数中指定名称的参数赋值 （推荐-常用）
            value：用于提供基本类型和String类型
            ref：引用外部bean，指的是在IOC容器中出现过的bean
         优势：
             在获取对象时，注入数据是必须的操作，否则对象无法创建成功。
         弊端：
             改变了bean对象的实例化方式，使我们在创建对象时，如果用不到这些数据，也必须提供
    -->
    <bean id="accountService" class="com.lvqz.spring.lab4.service.impl.AccountServiceImpl">
        <constructor-arg name="name" value="泰斯特"></constructor-arg>
        <constructor-arg name="age" value="18"></constructor-arg>
        <constructor-arg name="birth" ref="now" ></constructor-arg>
    </bean>

    <bean id="now" class="java.util.Date"></bean>

    <!--set方法注入   更常用
        涉及的标签：property
        出现的位置：bean的内部
        标签的属性：
                name:用于指定注入时使用的set方法名称
                value：用于提供基本类型和String类型的数据
                ref：引用外部bean，指的是在IOC容器中出现过的bean

        优势：
            创建对象没有明确的限制，可以直接使用默认的构造函数
        劣势:
            如果有某个成员必须有值，则获取对象时有可能set方法没有执行
    -->
    <bean id="accountService2" class="com.lvqz.spring.lab4.service.impl.AccountServiceImpl2">

        <property name="name" value="泰斯特2"></property>
        <property name="age" value="20"></property>
        <property name="birth" ref="now"></property>

    </bean>


    <!--复杂类型的注入/集合类型的注入
           用于给list结构集合注入的标签:
           array list set
           用于给map结构集合注入的标签:
           map props
           总结：结构相同，标签可以互换
    -->
    <bean id="accountService3" class="com.lvqz.spring.lab4.service.impl.AccountServiceImpl3">
        <property name="myStrs">
            <list>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </list>
        </property>

        <property name="myList">
            <set>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </set>
        </property>

        <property name="mySet">
            <list>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </list>
        </property>

        <property name="myMap">
            <props>
                <prop key="testCCC">CCC</prop>
                <prop key="testDDD">DDD</prop>

            </props>
        </property>

        <property name="props">
            <map>
                <entry key="testAAA" value="testAAA"></entry>
                <entry key="testBBB">
                    <value>testBBB</value>
                </entry>
            </map>
        </property>
    </bean>

</beans>