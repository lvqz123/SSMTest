<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.lvqz.mybatis.dao.IUserDao">


    <resultMap id="userResultMap" type="user">
        <!--主键标签使用id，非主键使用result-->
        <!--column配的是数据库的字段名称，property配的是相对应的实体类的变量名-->
        <id column="id" property="userId"></id>
        <result column="username" property="userName"></result>
        <result column="birthday" property="userBirthday"></result>
        <result column="sex" property="userSex"></result>
        <result column="address" property="userAddress"></result>
    </resultMap>

    <!--配置查询所有，使用自定义resultMap-->
    <select id="findAllUser" resultMap="userResultMap">
        select * from user
        <!--select id as userId,username as userName,birthday as userBirthday,sex as userSex,address as userAddress from user-->
    </select>


    <!--配置查询一条数据-->
    <!-- parameterType为单一某个属性时，下面的占位符#{}中内容可以随意写，不一定要与user中变量一致 -->
    <select id="findById" parameterType="INTEGER" resultMap="userResultMap" >
        select * from user where id = #{id}
    </select>

    <!--配置模糊查询-->
    <!--<select id="findByName" parameterType="string" resultType="user">-->
    <select id="findByName" parameterType="string" resultMap="userResultMap">
          <!-- 推荐使用第一种写法 相当于PreStatement 预编译 -->
          select * from user where username like #{username}
    </select>


    <!--根据传入的对象，获取相关信息-->
    <select id="findByQueryVo" parameterType="queryVo" resultMap="userResultMap">
        select * from user where username like #{user.userName}
    </select>

    <!--根据传入的条件，动态查询user数据，所谓的动态SQL就是，如果条件里面你给我送了这个参数，那么我就把它当成条件，如果没送我语句中就不加这个条件-->
    <select id="findByCondition" resultMap="userResultMap" parameterType="user">
        <!-- 使用if标签，但是where 1=1有点违和，换种写法 -->
        <!--select * from user where 1=1
        <if test="userName != null">
            and username = #{userName}
        </if>-->

        <!-- 下面的意思就是，假如这个user中userName不为空
            语句为：select * from user where username = ?
            如果为空
            语句为：select * from user    后面的if标签同理
         -->
        select * from user
        <where>
            <if test="userName != null">
                and username = #{userName}
            </if>
            <if test="userSex != null">
                and sex = #{userSex}
            </if>
        </where>
    </select>


    <select id="findByIds" resultMap="userResultMap" parameterType="queryvo">
--         很明显，这个语句没有办法根据参数去写，只能使用动态SQL， 使用foreach标签
--         select * from user where id in ();
        select * from user
        <where>
            <if test="ids != null and ids.size()>0">
--              collection表示的是要遍历的集合，也是参数中传入的变量名，必须有get方法。
--              open表示语句的开始部分（开始拼接字符串）
--              close表示语句的结束部分（结束拼接字符串）
--              item表示变量的别名，也就是下面#{}中的名字
--              separator表示按照什么分隔符进行分割
                <foreach collection="ids" open="and id in(" close=")" item="uid" separator=",">
                  #{uid}
                </foreach>
            </if>
        </where>
    </select>








</mapper>